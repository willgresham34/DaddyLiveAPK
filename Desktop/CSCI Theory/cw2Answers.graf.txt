_> CSCI 2670 - Classwork 2
@{task} By the end of this assignment, you should be able to:
> |> analyze the computation of a DFA
> |> construct a DFA to recognize a @lang
> |> construct a DFA to recognize the union of 2 @langs
___ <!> Instructions
> |> Create a \graf document with your answers to the following problems.  Save your work as a Grafstate file with the extension **{.graf.txt} and upload it to eLC.
> |> You may work in small groups.  List in your document *{all} of the students in your group.
> |> Look at your file when you save it and *{before} submitting it to eLC to make sure it is what you intend to submit.  Check eLC *{after} submitting your file to make sure the correct file was uploaded.  It is your responsibility to submit the correct file.
__ @{task} Exercises
(1) Create a DFA called M_1 that recognizes the @lang of strings of *{a}s and *{b}s having a length of exactly 2.
//
:+ dfa M_1
title
Q={q1,q2,q3,q4}
S={a,b}
d(q1,a)=q2
d(q1,b)=q2
d(q2,a)=q3
d(q2,b)=q3
d(q3,a)=q4
d(q3,b)=q4
d(q4,a)=q4
d(q4,b) =q4
q0=q1
F={q3}
done.
//
//
(2) Show a logical analysis of the states in M_1.
//
//
:fig table
State # Meaning
q_1 # M_1 has read no characters or the set is \e.
q_2 # M_1 has read either one a or one b
q_3 # M_1 has read a string of a's and b's of exactly length 2
q_4 # M_1 has read a string of a's and b's longer then length 2
done.
//
(3) Create a DFA called M_2 that recognizes the language of *{a}s and *{b}s that contains zero or more *{a}s @fllwed by one or more *{b}s.
//
//
:+ dfa M_2
title
Q={r1,r2}
S={a,b}
d(r1,b)=r2
d(r1,a)=r1
d(r2,b)=r2
d(r2,a)=r1
q0=r1
F={r2}
done.
//
(4) Show a logical analysis of the states in M_2.
//
//
:fig table
State # Meaning
r_1 # The last symbol read was a or we have read \e or we have no previous inputs.
r_2 # The last symbol read was b.
done.
//
(5) Use the !{algorithm from class} to write \graf code for a DFA called M that recognizes the @lang L(M_1)\uL(M_2).
//
:+ dfa M
title M
Q={q1r1,q1r2,q2r1,q2r2,q3r1,q3r2,q4r1,q4r2}
S={a,b}
d(q1r1,a)=q2r1
d(q1r1,b)=q2r2
d(q1r2,a)=q2r1
d(q1r2,b)=q2r2
d(q2r1,a)=q3r1
d(q2r1,b)=q3r2
d(q2r2,a)=q3r1
d(q2r2,b)=q3r2
d(q3r1,a)=q4r1
d(q3r1,b)=q4r2
d(q3r2,a)=q4r1
d(q3r2,b)=q4r2
d(q4r1,a)=q4r1
d(q4r1,b)=q4r2
d(q4r2,a)=q4r1
d(q4r2,b)=q4r2
q0=q1r1
F={q3r2,q3r1,q2r2,q2r2,q4r2,q1r2}
done.
//
//
(6) Show a logical analysis of the states in M.
//
:fig table
State in M_U # Meaning
q_1r_1 # M_U has read no symbols and the last input was an A
q_1r_2 # M_U has read no symbols and the last input was a B
q_2r_1 # M_U has read a single symbol A
q_2r_2 # M_U has read a single symbol B
q_3r_1 # M_U has read exactly 2 values and the last input was an A
q_3r_2 # M_U has read exactly 2 values and the last input was an B
q_4r_1 # M_U has read more then 2 values and the last input was an A
q_4r_2 # M_U has read more then 2 values and the last input was an B
done.
//
//
(7) Identify which states in M are not necessary.
[i] A state is *{not necessary} if the state does not contribute to the computation of *{any} string/
Answer: q_1r_2 is not neccessary.
(8) Considering the logical purpose of the states used M_1 and M_2, explain why the states identified in problem @{(7)} are not necessary and why the Union algorithm produced them.
Answer: q_1r_2 is not neccessary because M_1 is based off of length of th input and M_2 is based off of the last input. Since there can only be one entry state it is impossible to get to the state as r_2 declares that the last input was a B but q_1 says that you have no inputs yet. Therefore it is impossible to get to the state.
(9) Modify your \graf code from problem @{(5)} to produce an equivalent DFA that does not have any states that are not necessary.
(*) Two DFAs M_1 and M_2 are said to be !{equivalent} (written M_1~=M_2) if L(M_1)=L(M_2).
done.
//
:+ dfa M
title M
Q={q1r1,q2r1,q2r2,q3r1,q3r2,q4r1,q4r2}
S={a,b}
d(q1r1,a)=q2r1
d(q1r1,b)=q2r2
d(q2r1,a)=q3r1
d(q2r1,b)=q3r2
d(q2r2,a)=q3r1
d(q2r2,b)=q3r2
d(q3r1,a)=q4r1
d(q3r1,b)=q4r2
d(q3r2,a)=q4r1
d(q3r2,b)=q4r2
d(q4r1,a)=q4r1
d(q4r1,b)=q4r2
d(q4r2,a)=q4r1
d(q4r2,b)=q4r2
q0=q1r1
F={q3r2,q3r1,q2r2,q2r2,q4r2}
done.